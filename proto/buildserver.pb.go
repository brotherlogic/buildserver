// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buildserver.proto

/*
Package buildserver is a generated protocol buffer package.

It is generated from these files:
	buildserver.proto

It has these top-level messages:
	Version
	VersionRequest
	VersionResponse
*/
package buildserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gobuildslave "github.com/brotherlogic/gobuildslave/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version struct {
	Job     *gobuildslave.Job `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
	Version string            `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Version) GetJob() *gobuildslave.Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type VersionRequest struct {
	JustLatest bool `protobuf:"varint,1,opt,name=just_latest,json=justLatest" json:"just_latest,omitempty"`
}

func (m *VersionRequest) Reset()                    { *m = VersionRequest{} }
func (m *VersionRequest) String() string            { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()               {}
func (*VersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VersionRequest) GetJustLatest() bool {
	if m != nil {
		return m.JustLatest
	}
	return false
}

type VersionResponse struct {
	Versions []*Version `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
}

func (m *VersionResponse) Reset()                    { *m = VersionResponse{} }
func (m *VersionResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()               {}
func (*VersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *VersionResponse) GetVersions() []*Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*Version)(nil), "buildserver.Version")
	proto.RegisterType((*VersionRequest)(nil), "buildserver.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "buildserver.VersionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BuildService service

type BuildServiceClient interface {
	GetVersions(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type buildServiceClient struct {
	cc *grpc.ClientConn
}

func NewBuildServiceClient(cc *grpc.ClientConn) BuildServiceClient {
	return &buildServiceClient{cc}
}

func (c *buildServiceClient) GetVersions(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := grpc.Invoke(ctx, "/buildserver.BuildService/GetVersions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BuildService service

type BuildServiceServer interface {
	GetVersions(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterBuildServiceServer(s *grpc.Server, srv BuildServiceServer) {
	s.RegisterService(&_BuildService_serviceDesc, srv)
}

func _BuildService_GetVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServiceServer).GetVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildserver.BuildService/GetVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServiceServer).GetVersions(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buildserver.BuildService",
	HandlerType: (*BuildServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersions",
			Handler:    _BuildService_GetVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "buildserver.proto",
}

func init() { proto.RegisterFile("buildserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x86, 0xbf, 0x7c, 0x95, 0x68, 0x39, 0x23, 0x50, 0x2d, 0x86, 0xa8, 0x20, 0x11, 0x85, 0x25,
	0x93, 0x03, 0x41, 0xe2, 0x07, 0xc0, 0x00, 0xaa, 0x98, 0x82, 0xc4, 0xc0, 0x82, 0xea, 0x70, 0x4a,
	0x5d, 0x85, 0x5e, 0xf1, 0x39, 0xf9, 0xfd, 0x28, 0x76, 0x5a, 0x65, 0xe8, 0x66, 0xbf, 0xf7, 0xbc,
	0x8f, 0xce, 0x86, 0xb9, 0x6e, 0x4d, 0xf3, 0xcd, 0x68, 0x3b, 0xb4, 0x6a, 0x67, 0xc9, 0x91, 0x14,
	0xa3, 0x68, 0xf1, 0x58, 0x1b, 0xb7, 0x6e, 0xb5, 0xaa, 0xe8, 0x27, 0xd7, 0x96, 0xdc, 0x1a, 0x6d,
	0x43, 0xb5, 0xa9, 0xf2, 0x9a, 0x02, 0xd6, 0xac, 0x3a, 0xcc, 0x7d, 0x31, 0xf7, 0xe7, 0x20, 0x49,
	0x5f, 0x61, 0xfa, 0x81, 0x96, 0x0d, 0x6d, 0xe5, 0x2d, 0x4c, 0x36, 0xa4, 0xe3, 0x28, 0x89, 0x32,
	0x51, 0xcc, 0xd5, 0xb8, 0xa8, 0x96, 0xa4, 0xcb, 0x7e, 0x2a, 0x63, 0x98, 0x76, 0x81, 0x8f, 0xff,
	0x27, 0x51, 0x76, 0x5a, 0xee, 0xaf, 0xe9, 0x3d, 0x9c, 0x0f, 0xa6, 0x12, 0x7f, 0x5b, 0x64, 0x27,
	0x6f, 0x40, 0x6c, 0x5a, 0x76, 0x5f, 0xcd, 0xca, 0x21, 0x3b, 0x2f, 0x9e, 0x95, 0xd0, 0x47, 0x6f,
	0x3e, 0x49, 0x9f, 0xe1, 0xe2, 0x50, 0xe1, 0x1d, 0x6d, 0x19, 0xe5, 0x1d, 0xcc, 0x06, 0x21, 0xc7,
	0x51, 0x32, 0xc9, 0x44, 0x71, 0xa9, 0xc6, 0x4f, 0xdf, 0xf3, 0x07, 0xaa, 0xf8, 0x84, 0xb3, 0xa7,
	0x1e, 0x78, 0x47, 0xdb, 0x99, 0x0a, 0xe5, 0x12, 0xc4, 0x0b, 0xba, 0x81, 0x63, 0x79, 0x75, 0xb4,
	0x1e, 0x36, 0x5c, 0x5c, 0x1f, 0x1f, 0x86, 0x5d, 0xd2, 0x7f, 0xfa, 0xc4, 0x7f, 0xd2, 0xc3, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x6e, 0x10, 0xad, 0x7e, 0x01, 0x00, 0x00,
}
